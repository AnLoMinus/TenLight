name: 🛡️ Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1'  # שבועי ביום שני בשעה 2:00

jobs:
  dependency-scan:
    name: 🔍 בדיקת תלויות
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 🐍 Setup Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'
        
    - name: 📦 Install Node.js dependencies
      run: |
        if [ -f package.json ]; then
          npm ci
        fi
        
    - name: 📦 Install Python dependencies
      run: |
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi
        
    - name: 🔍 Run npm audit
      run: |
        if [ -f package.json ]; then
          npm audit --audit-level moderate --json > npm-audit.json || true
        fi
        
    - name: 🔍 Run pip audit
      run: |
        if command -v pip-audit &> /dev/null; then
          pip-audit --format=json --output=pip-audit.json || true
        fi
        
    - name: 🔍 Run Snyk
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
      continue-on-error: true
      
    - name: 📊 Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          npm-audit.json
          pip-audit.json
          snyk-results.json
        if-no-files-found: ignore

  code-scan:
    name: 🔍 סריקת קוד
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔍 Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: javascript, python
        
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
    - name: 🔍 Run Semgrep
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/owasp-top-ten
        generateSarif: "1"
        
    - name: 📤 Upload Semgrep results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: semgrep.sarif

  container-scan:
    name: 🐳 סריקת קונטיינרים
    runs-on: ubuntu-latest
    if: hashFiles('Dockerfile') != ''
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔍 Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: 📤 Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  secrets-scan:
    name: 🔐 סריקת סודות
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔍 Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🔍 Run GitLeaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

  license-scan:
    name: 📄 בדיקת רישיונות
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: |
        if [ -f package.json ]; then
          npm ci
        fi
        
    - name: 📄 Run license checker
      run: |
        if [ -f package.json ]; then
          npx license-checker --json --out license-report.json || true
        fi
        
    - name: 📊 Upload license report
      uses: actions/upload-artifact@v3
      with:
        name: license-report
        path: license-report.json
        if-no-files-found: ignore

  security-summary:
    name: 📊 סיכום אבטחה
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-scan, container-scan, secrets-scan, license-scan]
    if: always()
    
    steps:
    - name: 📊 Generate security summary
      run: |
        echo "## 🛡️ סיכום בדיקות אבטחה" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| בדיקה | סטטוס |" >> $GITHUB_STEP_SUMMARY
        echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| בדיקת תלויות | ${{ needs.dependency-scan.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| סריקת קוד | ${{ needs.code-scan.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| סריקת קונטיינרים | ${{ needs.container-scan.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| סריקת סודות | ${{ needs.secrets-scan.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| בדיקת רישיונות | ${{ needs.license-scan.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "> 🛡️ אבטחה היא אחריות של כולנו" >> $GITHUB_STEP_SUMMARY
